#!/bin/bash
IMPLICIT="--noimplicit_deps"
case $1 in
        -f) export IMPLICIT=""            
        ;;
        *)  export IMPLICIT="--noimplicit_deps --notool_deps"
esac
mkdir -p artifacts
echo "Generating Dependency Rules"
> /tmp/graph_rules.in
bazel query 'filter("^(?!.*(symlinks|\.apply|\.create|\.reversed|\.delete|\.replace|\.describe|\.template|\.binary|\.[0-9]+)).*$",kind(rule,deps(...)))' $IMPLICIT --output graph > /tmp/graph_rules.in && \
dot -Tpng < /tmp/graph_rules.in > artifacts/dependency_rules.png
#'filter("symlinks",deps(...))'

echo "Generating Dependency"
> /tmp/graph_all.in
bazel query 'filter("^(?!.*(symlinks|\.apply|\.create|\.reversed|\.delete|\.replace|\.describe|\.template|\.binary|\.[0-9]+)).*$",deps(...))' $IMPLICIT --output graph > /tmp/graph_all.in && \
dot -Tpng < /tmp/graph_all.in > artifacts/dependency.png

echo "Generating Dependency (without extenal)"
> /tmp/graph_all_internal.in
bazel query 'filter("^(?!.*(symlinks|\.apply|\.create|\.reversed|\.delete|\.replace|\.describe|\.template|\.binary|@|\.[0-9]+)).*$",deps(...))' $IMPLICIT --output graph > /tmp/graph_all_internal.in && \
dot -Tpng < /tmp/graph_all_internal.in > artifacts/dependency_internals.png

echo ""
echo "==== Universe Packages ===="
bazel query '...' --output package
echo ""
echo "==== Universe Rules ===="
bazel query 'kind(rule, //...)' --output label_kind


## --universe_scope=